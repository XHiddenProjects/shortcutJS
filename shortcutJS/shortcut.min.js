const SHIFT=!0,CTRL=!0,NO_SHIFT=!1,NO_CTRL=!1;var kL=[],IFs="",tar=0;class shortcutJS{constructor(){this.keyBind={},this.r=!0}createListener(){kL=Object.entries(this.keyBind);for(let i=0;i<kL.length;i++)window.addEventListener("keydown",(function(event,tar=i){let ifs="";if("string"==typeof kL[tar][0]&&(ifs+='event.key==="'+kL[tar][0]+'"'),"number"==typeof kL[tar][0]&&(ifs+="event.keyCode==="+kL[tar][0]),kL[tar][1].shift&&(ifs+="&&event.shiftKey"),kL[tar][1].ctrl&&(ifs+="&&event.ctrlKey"),eval(ifs))return event.preventDefault(),kL[tar][1].func(),!1;ifs=""}))}bind(t,e,r=NO_SHIFT||[NO_SHIFT],n=CTRL||[CTRL]){if("function"!=typeof e&&!Array.isArray(e))return console.error(e+" must be a function|array"),!1;if("string"==typeof t||"number"==typeof t)t=t.substr(0,1),this.keyBind[t]={shift:r,ctrl:n,func:e};else{if(Array.isArray(t)){for(let i=0;i<t.length;i++){if(t[i]=t[i].substr(0,1),"function"!=typeof e[i])return console.error(e[i]+" must be a function"),!1;if("string"!=typeof t[i]&&"number"!=typeof t[i])return console.error(t[i]+" must be a function"),!1;this.keyBind[t[i]]={shift:r[i],ctrl:n[i],func:e[i]}}return!0}console.error(t+" must be a string|number|array"),this.r=!1}this.keyBind={}}unbind(t){return this.keyBind[t]?delete this.keyBind[t]:(console.error(t+" doesn`t have a set value"),!1)}strip(t){return t.split("")[0]}get(t=!0){return this.keyBind}}export{shortcutJS,SHIFT,CTRL,NO_SHIFT,NO_CTRL};